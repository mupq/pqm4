#ifndef NTT_H
#define NTT_H

#include <stdint.h>

#include "NTT_params.h"

extern void __asm_Good_3x2(int32_t *des, const int32_t*, int32_t, int32_t, const uint16_t *src);
extern void __asm_Good_3x2_small(int32_t *des, const int32_t*, int32_t, int32_t, const uint16_t *src);
extern void __asm_ntt_32(int32_t *des, const int32_t*, int32_t, int32_t);
extern void __asm_base_mul(int32_t*, const int32_t*, int32_t, int32_t, int32_t*, int32_t*);
extern void __asm_i_3x2(int32_t *des, const int32_t*, int32_t, int32_t);
extern void __asm_intt(int32_t *des, const int32_t*, int32_t, int32_t);
extern void __asm_final_map(uint16_t *des, const int32_t*, int32_t, int32_t, int32_t *src);

static const int32_t streamlined_CT_table_Q1[NTT_N - 1] = {
-996138, -996138, -996138, 353751, -996138, 353751, 782333, -801779, 353751, 782333, -801779, 1045808, -929693, -320989, 1131150, -996138, -996138, 353751, -996138, 353751, 782333, -801779, 353751, 782333, -801779, 1045808, -929693, -320989, 1131150, 782333, 1045808, -929693, 568323, 308826, -548878, 620161, -801779, -320989, 1131150, -883382, -329685, 432585, -479261, 1045808, 568323, 308826, 531816, -425339, -239616, -86584, -929693, -548878, 620161, 972566, 489542, 361063, 1060093, -320989, -883382, -329685, -170086, 424820, 666595, -138659, 1131150, 432585, -479261, 173610, 970695, 77487, -843597, 568323, 531816, -425339, -1144593, 261396, -509771, -588602, 308826, -239616, -86584, -96748, 995159, -1151764, -1125974, -548878, 972566, 489542, 48278, 1026448, -630212, -721042, 620161, 361063, 1060093, 789015, 1138403, 464483, 138668, -883382, -170086, 424820, -121983, -760359, -161425, 1167223, -329685, 666595, -138659, 606498, -109776, 772935, 505700, 432585, 173610, 970695, -350392, 54198, -380713, -430447, -479261, 77487, -843597, 162532, 254243, -411076, -321530
};

static const int32_t mul_Rmod_table_Q1[NTT_N] = {
-996138, 353751, 782333, -801779, 1045808, -929693, -320989, 1131150, 568323, 308826, -548878, 620161, -883382, -329685, 432585, -479261, 531816, -425339, -239616, -86584, 972566, 489542, 361063, 1060093, -170086, 424820, 666595, -138659, 173610, 970695, 77487, -843597, -1144593, 261396, -509771, -588602, -96748, 995159, -1151764, -1125974, 48278, 1026448, -630212, -721042, 789015, 1138403, 464483, 138668, -121983, -760359, -161425, 1167223, 606498, -109776, 772935, 505700, -350392, 54198, -380713, -430447, 162532, 254243, -411076, -321530
};

static const int32_t streamlined_inv_CT_table_Q1[NTT_N - 1] = {
-996138, -996138, -996138, -353751, -996138, 801779, -353751, -782333, -353751, 801779, -782333, -1131150, 929693, 320989, -1045808, -996138, -996138, -353751, -996138, 801779, -353751, -782333, 479261, 843597, -77487, 321530, -254243, 411076, -162532, -1131150, 479261, -432585, 843597, -970695, -77487, -173610, -620161, -1060093, -361063, -138668, -1138403, -464483, -789015, 801779, -1131150, 320989, 479261, 329685, -432585, 883382, 329685, 138659, -666595, -505700, 109776, -772935, -606498, 929693, -620161, 548878, -1060093, -489542, -361063, -972566, -308826, 86584, 239616, 1125974, -995159, 1151764, 96748, -353751, 801779, -782333, -1131150, 929693, 320989, -1045808, -432585, -970695, -173610, 430447, -54198, 380713, 350392, 320989, 329685, 883382, 138659, -424820, -666595, 170086, 548878, -489542, -972566, 721042, -1026448, 630212, -48278, -782333, 929693, -1045808, -620161, -308826, 548878, -568323, 883382, -424820, 170086, -1167223, 760359, 161425, 121983, -1045808, -308826, -568323, 86584, 425339, 239616, -531816, -568323, 425339, -531816, 588602, -261396, 509771, 1144593
};

static const int32_t _3_NTT_table_Q1[4] = {
    omega3Q1, invomega3Q1
};

static const int32_t _3_NTT_Rmod_table_Q1[4] = {
    omega3RmodQ1, invomega3RmodQ1
};

static const int32_t _3_iNTT_Rmod_table_Q1[4] = {
    invomega3RmodQ1, omega3RmodQ1
};

static const int32_t final_const[4] = {
    invNinv3R2modQ1
};

#define NTT_forward(out, in){ \
    __asm_Good_3x2(out, _3_NTT_Rmod_table_Q1, Q1prime, Q1, in); \
    __asm_ntt_32(out, streamlined_CT_table_Q1, Q1prime, Q1); \
}

#define NTT_forward_small(out, in){ \
    __asm_Good_3x2_small(out, _3_NTT_table_Q1, Q1prime, Q1, in); \
    __asm_ntt_32(out, streamlined_CT_table_Q1, Q1prime, Q1); \
}

#define NTT_mul(out, in1, in2) __asm_base_mul(out, mul_Rmod_table_Q1, Q1prime, Q1, in1, in2)

#define NTT_inv(out){ \
    __asm_i_3x2(out, _3_iNTT_Rmod_table_Q1, Q1prime, Q1); \
    __asm_intt(out, streamlined_inv_CT_table_Q1, Q1prime, Q1); \
}

#define NTT_final_map(out, in) __asm_final_map(out, final_const, Q1prime, Q1, in)


#endif



